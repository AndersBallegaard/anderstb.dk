[{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eIntro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eIntro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM.\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eIntro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM.\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is nat64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become '\u0026rsquo;\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;,\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes '\u0026rsquo;\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003c/ul\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eCertine NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eCertine NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, most notably if the service is stateful or not. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, most notably if the service is stateful or not. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/intro-homelab-v6-dns64.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, most notably if the service is stateful or not. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/DNS64-flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, most notably if the service is stateful or not. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":null,"permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eWhat is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eHow does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, most notably if the service is stateful or not. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, most notably if the service is stateful or not. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, CLAT.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations,\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to\u003c/li\u003e\n\u003c/ul\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way that\u0026rsquo;s now officially\u003c/li\u003e\n\u003c/ul\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for\u003c/li\u003e\n\u003c/ul\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC\u003c/li\u003e\n\u003c/ul\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix.\u003c/li\u003e\n\u003c/ul\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eClient interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64.\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e(youtube channel)[]\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e(youtube channel)[https://www.youtube.com/@apalrdsadventures]\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003cp\u003eIt is ofcourse posible to setup a VM, and just run Tayga on any Linux server, but tayga is also the NAT64 option for OpnSense, PfSense,\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003cp\u003eIt is ofcourse posible to setup a VM, and just run Tayga on any Linux server, but tayga is also the NAT64 option for OpnSense, and PfSense.\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003cp\u003eJool seems to be a newer better performing option,\u003c/p\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003cp\u003eIt is ofcourse posible to setup a VM, and just run Tayga on any Linux server, but tayga is also the NAT64 option for OpnSense, and PfSense.\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003cp\u003eJool seems to be a newer better performing option, development seems to be slow but still existing.\u003c/p\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003cp\u003eIt is ofcourse posible to setup a VM, and just run Tayga on any Linux server, but tayga is also the NAT64 option for OpnSense, and PfSense.\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003cp\u003eJool seems to be a newer better performing option, development seems to be slow but still existing.\nUnlike Tayga, it runs as a kernel module. This could be why the performance is much better.\u003c/p\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003cp\u003eIt is ofcourse posible to setup a VM, and just run Tayga on any Linux server, but tayga is also the NAT64 option for OpnSense, and PfSense.\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003cp\u003eJool seems to be a newer better performing option, development seems to be slow but still existing.\nUnlike Tayga, it runs as a kernel module. This could be why the performance is much better.\u003c/p\u003e\n\u003cp\u003eI haven\u0026rsquo;t done any performance testing but Nico Schottelius did a \u003cem\u003e\u003cstrong\u003e\u003ca href=\"\"\u003epresentation at RIPE85\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003cp\u003eIt is ofcourse posible to setup a VM, and just run Tayga on any Linux server, but tayga is also the NAT64 option for OpnSense, and PfSense.\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003cp\u003eJool seems to be a newer better performing option, development seems to be slow but still existing.\nUnlike Tayga, it runs as a kernel module. This could be why the performance is much better.\u003c/p\u003e\n\u003cp\u003eI haven\u0026rsquo;t done any performance testing but Nico Schottelius did a \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://ripe85.ripe.net/presentations/78-ripe85-open-source-nat64.pdf\"\u003epresentation at RIPE85\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e and found Jool to perform more than twice as fast as Tayga, but I haven\u0026rsquo;t tested it myself yet.\u003c/p\u003e\n\u003cp\u003eIf you want an out of the box solution using Jool, it seems like Jool is the built in NAT64 option for VYOS.\u003c/p\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003cp\u003eIt is ofcourse posible to setup a VM, and just run Tayga on any Linux server, but tayga is also the NAT64 option for OpnSense, and PfSense.\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003cp\u003eJool seems to be a newer better performing option, development seems to be slow but still existing.\nUnlike Tayga, it runs as a kernel module. This could be why the performance is much better.\u003c/p\u003e\n\u003cp\u003eI haven\u0026rsquo;t done any performance testing but Nico Schottelius did a \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://ripe85.ripe.net/presentations/78-ripe85-open-source-nat64.pdf\"\u003epresentation at RIPE85\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e and found Jool to perform more than twice as fast as Tayga, but I haven\u0026rsquo;t tested it myself yet.\u003c/p\u003e\n\u003cp\u003eIf you want an out of the box solution using Jool, it seems like Jool is the built in NAT64 option for VYOS.\u003c/p\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n\u003cp\u003eI happen to have a fairly modern Cisco router in my lab, so I wanted to look at if i could use that. I would probably not recormend going out to buy a physical router just to use it for NAT64.\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eComparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003cp\u003eIt is ofcourse posible to setup a VM, and just run Tayga on any Linux server, but tayga is also the NAT64 option for OpnSense, and PfSense.\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003cp\u003eJool seems to be a newer better performing option, development seems to be slow but still existing.\nUnlike Tayga, it runs as a kernel module. This could be why the performance is much better.\u003c/p\u003e\n\u003cp\u003eI haven\u0026rsquo;t done any performance testing but Nico Schottelius did a \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://ripe85.ripe.net/presentations/78-ripe85-open-source-nat64.pdf\"\u003epresentation at RIPE85\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e and found Jool to perform more than twice as fast as Tayga, but I haven\u0026rsquo;t tested it myself yet.\u003c/p\u003e\n\u003cp\u003eIf you want an out of the box solution using Jool, it seems like Jool is the built in NAT64 option for VYOS.\u003c/p\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n\u003cp\u003eI happen to have a fairly modern Cisco router in my lab, so I wanted to look at if i could use that. I would probably not recormend going out to buy a physical router just to use it for NAT64.\u003c/p\u003e\n\u003cp\u003eThe main pro for me is that it is something that is more likely to see in a production network. Obivoiusly when running a production network, vendor support is a very important component. It also seems very easy to configure, and i am sure it would work fine.\nA drawback for me is power consumption. I currently don\u0026rsquo;t have any other reason to run that router 24/7, so locating NAT64 on it, would add a new source of power draw to my homelab.\u003c/p\u003e\n","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Comparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003cp\u003eIt is ofcourse posible to setup a VM, and just run Tayga on any Linux server, but tayga is also the NAT64 option for OpnSense, and PfSense.\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003cp\u003eJool seems to be a newer better performing option, development seems to be slow but still existing.\nUnlike Tayga, it runs as a kernel module. This could be why the performance is much better.\u003c/p\u003e\n\u003cp\u003eI haven\u0026rsquo;t done any performance testing but Nico Schottelius did a \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://ripe85.ripe.net/presentations/78-ripe85-open-source-nat64.pdf\"\u003epresentation at RIPE85\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e and found Jool to perform more than twice as fast as Tayga, but I haven\u0026rsquo;t tested it myself yet.\u003c/p\u003e\n\u003cp\u003eIf you want an out of the box solution using Jool, it seems like Jool is the built in NAT64 option for VYOS.\u003c/p\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n\u003cp\u003eI happen to have a fairly modern Cisco router in my lab, so I wanted to look at if i could use that. I would probably not recormend going out to buy a physical router just to use it for NAT64.\u003c/p\u003e\n\u003cp\u003eThe main pro for me is that it is something that is more likely to see in a production network. Obivoiusly when running a production network, vendor support is a very important component. It also seems very easy to configure, and i am sure it would work fine.\nA drawback for me is power consumption. I currently don\u0026rsquo;t have any other reason to run that router 24/7, so locating NAT64 on it, would add a new source of power draw to my homelab.\u003c/p\u003e\n\u003ch2 id=\"my-setup\"\u003eMy setup\u003c/h2\u003e\n\u003cp\u003eBased on above mentioned options, i have decided to use Jool but inside VYOS. I have also decided to use DNS64 given that the majority of my devices doesn\u0026rsquo;t have a built in CLAT implementation.\u003c/p\u003e\n\u003ch3 id=\"vyos-nat64-configuration\"\u003eVYOS NAT64 configuration\u003c/h3\u003e\n\u003cp\u003eEven though i have sevral diffrent VYOS routers in my network, i have decided to setup a new router for this purpose. I am mainly doing this for seperation of functions, and because any excuse to complicate my home networks routing is a good one.\nI will be using the following configuration:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u003c/code\u003e\u003c/pre\u003e","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"},{"content":"\u003ch1 id=\"writing-guide\"\u003eWriting guide\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eDone - Intro with refrence to previous post\u003c/li\u003e\n\u003cli\u003eDone - What is nat64 and why do we need it?\u003c/li\u003e\n\u003cli\u003eDone - How does nat64 work?\n\u003cul\u003e\n\u003cli\u003eCommon concepts accross all nat64 implementations\n\u003cul\u003e\n\u003cli\u003eAddress translation\u003c/li\u003e\n\u003cli\u003eCommon prefix\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWhat can differ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Client interaction with NAT64\n\u003cul\u003e\n\u003cli\u003e464XLAT\u003c/li\u003e\n\u003cli\u003eDNS64\u003c/li\u003e\n\u003cli\u003eNat64 prefix discovery\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDone - Comparison of diffrent NAT64 implementations\u003c/li\u003e\n\u003cli\u003eSetup of my chosen implementation\n\u003cul\u003e\n\u003cli\u003eMy requirements for a nat64 solution\u003c/li\u003e\n\u003cli\u003eMy choice (NAT64 + client side)\u003c/li\u003e\n\u003cli\u003eSetting up the implementation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content\"\u003eContent\u003c/h1\u003e\n\u003cp\u003eAs discussed in \u003cem\u003e\u003cstrong\u003e\u003ca href=\"/posts/ipv6-mostly-home-intro/\"\u003ethe previous post\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e, I am currently making some modifications to my homelab. In as a part of this process, I am looking at NAT64 solutions again. I am currently running Tayga on OpnSense, but want to move to NAT64 to a dedicated VM. This post will be going through what NAT64 is, how clients interact with it, a comparison of diffrent implementations and finally setting up my chosen implementation.\u003c/p\u003e\n\u003ch2 id=\"what-is-nat64-and-why-do-we-need-it\"\u003eWhat is NAT64 and why do we need it?\u003c/h2\u003e\n\u003cp\u003eWe need NAT64 in IPv6 mostly and IPv6 only networks because there are still many sites and services on the internet that don\u0026rsquo;t support IPv6. NAT64 solves this by mapping every single IPv4 address to a unique IPv6 address, which can be used for communication with those addresses.\u003c/p\u003e\n\u003cp\u003eThis ofcourse doesn\u0026rsquo;t magicly fix client devices that doesn\u0026rsquo;t support IPv6, but it enables devices with IPv6 support to start going IPv6 only. Mobile devices, and some desktop operating systems (primarily macOS) support IPv6 only operations particularly well, due to having built in CLAT implementations. But we will dive deen into this later.\u003c/p\u003e\n\u003ch2 id=\"how-does-nat64-work\"\u003eHow does NAT64 work?\u003c/h2\u003e\n\u003cp\u003eAll NAT64 implementations map an ipv6 address into a /96 IPv6 prefix. Given that IPv6 addresses are 128 bits, and IPv4 addresses are 32 bits, the mapping is done by taking every single bit of the IPv4 address and adding it to the end of the IPv6 address. This means that for example an ipv4 address \u0026lsquo;1.1.1.1\u0026rsquo; could become \u0026lsquo;64:ff9b::101:101\u0026rsquo;, or \u0026lsquo;96.7.128.175\u0026rsquo; becomes \u0026lsquo;64:ff9b::6007:80af\u0026rsquo;.\u003c/p\u003e\n\u003cp\u003eBut where does the 64:ff9b:: come from? Well, you can technically use any /96 IPv6 prefix, but 64:ff9b::/96 is reserved to NAT64. Using 64:ff9b::/96 does have some pros and cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf you want to use publicly avalible DNS64 services, this is the prefix they assume your NAT64 implementation will be using.\u003c/li\u003e\n\u003cli\u003eIt is obvious that traffic is going through NAT64 if you see an 64:ff9b::/96 address.\u003c/li\u003e\n\u003cli\u003eSome NAT64 implementations might not allow translating traffic to RFC1918 destinations, if you are using 64:ff9b::/96\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere can be some diffrences between NAT64 implementations, but we will look more at that in the comparison section below. For homelab purposes i would also argue it makes quite a diffrence if you are managing the NAT64 software directly, or if you are using it as part of an intigrated solution like running NAT64 in OpnSense.\u003c/p\u003e\n\u003ch2 id=\"client-interaction-with-nat64\"\u003eClient interaction with NAT64\u003c/h2\u003e\n\u003cp\u003eIt might be worth briefly looking at how clients interact with NAT64 before looking at the solutions themself. The two main ways are DNS64 or CLAT. These are not nessearily mutraly exclusive, and can be used in combination.\u003c/p\u003e\n\u003ch3 id=\"dns64\"\u003eDNS64\u003c/h3\u003e\n\u003cp\u003eDNS64 essentially works by lying to the client, The DNS server sends A and AAAA queries for a given domain. If no AAAA record is found, it maps the A record address into a NAT64 address, for this reason it is very important that the DNS64 server knows the correct NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/DNS64_flow.png\" alt=\"DNS64\"\u003e\u003c/p\u003e\n\u003cp\u003eThe advantage of using DNS64 is quite clear, it doesn\u0026rsquo;t require any changes to your clients. But there are unfortunately a few drawbacks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIf used standalone without CLAT on the clients, it doesn\u0026rsquo;t offer any fallback in case a service has a AAAA record, but the IPv6 implementation of the site for some reason doesn\u0026rsquo;t work. To be fair, this is not a flaw in DNS64 itself, but just a consequence of purely relying on DNS64.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t offer any way of translating IPv4 littrals. While generally not a huge problem, it is a problem in some cases, most notably Discord voice chat.\u003c/li\u003e\n\u003cli\u003eIf your endpoints are doing DNSSEC validation, it will detect that the DNS server is lying to you and reject the response.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"464xlat\"\u003e464XLAT\u003c/h3\u003e\n\u003cp\u003e464XLAT introduces a new component, a Customer site translater called CLAT. The CLAT is most often located on the endpoint device itself, but it doesn\u0026rsquo;t have to be. If as an example you have 5G router on an IPv6 Only mobile network, you probably have a CLAT function built into your router. CLAT essentially just allows the translation of IPv4 packets into IPv6 packets using the NAT64 prefix.\n\u003cimg src=\"/images/content/ipv6-series/464xlat.png\" alt=\"464XLAT\"\u003e\u003c/p\u003e\n\u003cp\u003eThe pros of this is that IPv4 works no matter if you have DNSSEC, IPv4 littrals, or whatever else. The cons are that it requires a new component usually located on the endpoint device itself.\nMobile devices generally have very good CLAT implementations, apple have also included the Iphones CLAT implementation in macOS. Microsoft have commited to CLAT for all network types in Windows 11, but they commited to that over a year ago, and we haven\u0026rsquo;t heard anything since.\u003c/p\u003e\n\u003cp\u003eBut how do CLAT implementations even know what NAT64 prefix to use? There are generally two ways of doing this.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe first and preferred way is to use PREF64 router advertisements. This option needs to be implemented per endpoint network, but it enables the router to inform the client about the NAT64 prefix when announcing the IPv6 router information.\u003c/li\u003e\n\u003cli\u003eAnother way is using DNS64. This requires the client to lookup a AAAA record for ipv4only.arpa. Per RFC7050 the response for ipv4only.arpa should be 192.0.0.170/192.0.0.171. So AAAA response would indicate NAT64 is implemted. The NAT64 prefix is found by taking the first 96 bits of the IPv6 address in the response, and using that as the NAT64 prefix. It is worth noting that the IETF is working on deprecating this method, recormending the use of PREF64 instead.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"comparing-nat64-implementations\"\u003eComparing NAT64 implementations\u003c/h3\u003e\n\u003cp\u003eI will focusing mostly on NAT64 implementations that are free, and easy to implement. So yes you could ask Cisco/F5/Juniper/etc for a NAT64 implementation, solution. But not everyone has access to that.\u003c/p\u003e\n\u003cp\u003eI do however have a cisco router in my homelab, so i will include that just because i could use it.\u003c/p\u003e\n\u003ch4 id=\"tayga\"\u003eTayga\u003c/h4\u003e\n\u003cp\u003eI am currently using Tayga inside OpnSense and it has worked fine for me. From what i remember this was generally the recormended solution back when i last researched NAT64. It seems like it\u0026rsquo;s not the best option for performance, and that it has had some problems with lacking maintence.\u003c/p\u003e\n\u003cp\u003eEarlier in 2025 some new life was given to Tayga, in the form of Andrew Palardy being the new maintainer (Checkout his \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://www.youtube.com/@apalrdsadventures\"\u003eyoutube channel\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e if you like this kind of content)\u003c/p\u003e\n\u003cp\u003eIt is ofcourse posible to setup a VM, and just run Tayga on any Linux server, but tayga is also the NAT64 option for OpnSense, and PfSense.\u003c/p\u003e\n\u003ch4 id=\"jool\"\u003eJool\u003c/h4\u003e\n\u003cp\u003eJool seems to be a newer better performing option, development seems to be slow but still existing.\nUnlike Tayga, it runs as a kernel module. This could be why the performance is much better.\u003c/p\u003e\n\u003cp\u003eI haven\u0026rsquo;t done any performance testing but Nico Schottelius did a \u003cem\u003e\u003cstrong\u003e\u003ca href=\"https://ripe85.ripe.net/presentations/78-ripe85-open-source-nat64.pdf\"\u003epresentation at RIPE85\u003c/a\u003e\u003c/strong\u003e\u003c/em\u003e and found Jool to perform more than twice as fast as Tayga, but I haven\u0026rsquo;t tested it myself yet.\u003c/p\u003e\n\u003cp\u003eIf you want an out of the box solution using Jool, it seems like Jool is the built in NAT64 option for VYOS.\u003c/p\u003e\n\u003ch4 id=\"cisco-ios-xe\"\u003eCisco IOS XE\u003c/h4\u003e\n\u003cp\u003eI happen to have a fairly modern Cisco router in my lab, so I wanted to look at if i could use that. I would probably not recormend going out to buy a physical router just to use it for NAT64.\u003c/p\u003e\n\u003cp\u003eThe main pro for me is that it is something that is more likely to see in a production network. Obivoiusly when running a production network, vendor support is a very important component. It also seems very easy to configure, and i am sure it would work fine.\nA drawback for me is power consumption. I currently don\u0026rsquo;t have any other reason to run that router 24/7, so locating NAT64 on it, would add a new source of power draw to my homelab.\u003c/p\u003e\n\u003ch2 id=\"my-setup\"\u003eMy setup\u003c/h2\u003e\n\u003cp\u003eBased on above mentioned options, i have decided to use Jool but inside VYOS. I have also decided to use DNS64 given that the majority of my devices doesn\u0026rsquo;t have a built in CLAT implementation.\u003c/p\u003e\n\u003ch3 id=\"vyos-nat64-configuration\"\u003eVYOS NAT64 configuration\u003c/h3\u003e\n\u003cp\u003eEven though i have sevral diffrent VYOS routers in my network, i have decided to setup a new router for this purpose. I am mainly doing this for seperation of functions, and because any excuse to complicate my home networks routing is a good one.\nI will be using the following configuration:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u003c/code\u003e\u003c/pre\u003e","description":"An comparison of diffrent NAT64 options, and an introduction to NAT64 related concepts","image":"/images/content/ipv6-series/DNS64_flow.png","permalink":"http://localhost:1313/posts/nat64-for-the-homelab/","title":"Nat64 for the Homelab"},{"content":"\u003ch2 id=\"why-should-ipv6-be-a-part-of-a-homelab\"\u003eWhy Should IPv6 be a part of a homelab?\u003c/h2\u003e\n\u003cp\u003eI have been a long-time advocate for IPv6. It has been a crucial part of my homelab for years, and through my work at a major Danish ISP, I\u0026rsquo;ve have among other things contributed to enabling and improving IPv6 for many Danish broadband customers.\u003c/p\u003e\n\u003cp\u003eAs I\u0026rsquo;m currently updating and fine-tuning some aspects of my homelab, I thought it would be a good idea to document the process here. This will serve as not only personal documentation but also an introduction for anyone interested in setting up their own IPv6 homelab.\u003c/p\u003e\n\u003cp\u003eBut why should you care about IPv6? Let\u0026rsquo;s take a look at its current usage.\u003c/p\u003e\n\u003cp\u003eFirstly, almost half of all internet traffic is now IPv6. The numbers may vary slightly, but according to reports from Google and Meta, the trend is clear:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/content/ipv6-series/google-stats.png\" alt=\"google ipv6 stats\"\u003e\n\u003ca href=\"https://www.google.com/intl/en/ipv6/statistics.html\"\u003eSource\u003c/a\u003e\n\u003cimg src=\"/images/content/ipv6-series/meta-stats.png\" alt=\"meta ipv6 stats\"\u003e\n\u003ca href=\"https://www.facebook.com/ipv6/?tab=ipv6_total_adoption\"\u003eSource\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBesides the fact that a large portion of the internet is already using IPv6, there are also pushes from both companies and goverments to move to ipv6. Some of those major pushes include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eApple requires all app store apps to support working in IPv6-only networks. They have required this since 2016.\u003c/li\u003e\n\u003cli\u003eSeveral mobile operators have deployed IPv6-only mobile networks, with 464XLAT being the only way of accessing IPv4 sites. In the West, the most notable example is probably T-Mobile in the US. However, to my knowledge, this approach is also common in developing countries due to IPv4 scarcity.\u003c/li\u003e\n\u003cli\u003eThe US Office of Management and Budget has implemented an IPv6 mandate. In 2023, the US federal government presented a quite ambitious plan for moving to IPv6.\u003c/li\u003e\n\u003cli\u003eChina has mandated that Chinese router manufacturers must enable IPv6 by default in all new routers they sell.\u003c/li\u003e\n\u003cli\u003eMost major cloud providers have started not including public IPv4 addresses for free, thus adding an extra cost for still running IPv4 directly on servers. While this does not force organizations to change, it is a nudge that can be used as a motivator.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOfcourse companies and goverments isn\u0026rsquo;t just pusing for ipv6 for no reason at all. It takes a lot of effort to change, so there needs to be some good reasons behind the change. So here are some of the reasons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWe are running out of IPv4 address space. Part of this problem is related to the fact that early IPv4 allocation was made in a very shortsighted way; unfortunately, there isn\u0026rsquo;t really a way to change this. (And no Class E or redefining 127.0.0.0/8 won\u0026rsquo;t work.) Unlike many IPv6 supporters, I don\u0026rsquo;t like to say we have run out, but instead say we are running out. While it is true that getting new IPv4 space directly from your RIR is impossible (or close to it), there is still a healthy resale market. So you can get IPv4 space, but supply and demand makes a pure IPv4-only internet an impossibility now due to the amount of things we want connected.\u003c/li\u003e\n\u003cli\u003eSimpler routing and network operations are two benefits of IPv6. This might sound counterintuitive for anyone who has grown up with IPv4 networks, and I do admit it takes some time getting used to. But once you see the beauty in always using /64 netmasks without having to worry about exhaustion, or when you start to appreciate the simplicity of not dealing with NAT when troubleshooting, or realize the simplicity of the (base) IPv6 header compared to IPv4\u0026rsquo;s, you\u0026rsquo;ll understand what I mean. Like all things, there is a learning curve, and the more time you have spent with IPv4, the harder it probably is; but the more you use IPv6, the easier it becomes, and the more you will love it.\u003c/li\u003e\n\u003cli\u003eDecreased latency is another benefit of IPv6. Removing NAT on the internet does decrease latency, especially if your ISP forces you through CGNAT routers placed outside the optimal network path. In some cases, we also see a decreased latency due to cutting out legacy infrastructure that only supports IPv4.\u003c/li\u003e\n\u003cli\u003eEnergy efficiency is also a benefit of IPv6. Kinda the same as latency, removing NAT removes compute cycles to do NAT and decreases power consumption.\u003c/li\u003e\n\u003cli\u003eThe use of extension headers enables several key protocol improvements, including:\n\u003cul\u003e\n\u003cli\u003eRouting header: This allows the source device to specify the path it wants to take through the network. A very cool application of this is SRv6 routing.\u003c/li\u003e\n\u003cli\u003eIPsec header: This allows for encryption and authentication of packets built directly into the IP protocol, instead of as an additional layer like it is in IPv4.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSo now that you have a glimpse into why you should care about ipv6, I want to encourage you all to start experimenting with ipv6. Whether you\u0026rsquo;re building networks or developing apps, understanding how to work with ipv6 is essential for the future of networking and computing. With ipv6, we can expect simpler routing, decreased latency, improved energy efficiency, and more. By starting to experiment with ipv6 today, you\u0026rsquo;ll be better equipped to handle the challenges and opportunities that come with it.\u003c/p\u003e\n\u003ch2 id=\"ipv6-mostly-vs-ipv6-only\"\u003eIPv6 Mostly vs IPv6 Only\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s probably important to start out defining what I am trying to achieve and what some common terms mean.\u003c/p\u003e\n\u003ch3 id=\"ipv6-only\"\u003eIPv6 Only\u003c/h3\u003e\n\u003cp\u003eThis is straightforward; it means that you have access only to an IPv6 network. Unless you understand your devices and applications very well, this might not be a good idea right now.\u003c/p\u003e\n\u003cp\u003eIPv6 only is the ultimate goal, but we aren\u0026rsquo;t there yet. So instead of IPv6 only, most networks are targeting IPv6 mostly as a stepping stone.\u003c/p\u003e\n\u003cp\u003eIpv4 connectivity might still be provided for backwards compatibility through NAT64.\u003c/p\u003e\n\u003ch3 id=\"ipv6-mostly\"\u003eIPv6 Mostly\u003c/h3\u003e\n\u003cp\u003eThis is a defined term; see \u003ca href=\"https://datatracker.ietf.org/doc/draft-ietf-v6ops-6mops/\"\u003eIETF draft-ietf-v6ops-6mops-01\u003c/a\u003e for the full version, but here\u0026rsquo;s the short version:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe network must work for IPv6 only clients, dual-stack clients, and IPv4 only clients. The goal is to provide a space for migrating clients towards IPv6 only.\u003c/li\u003e\n\u003cli\u003eThe network must provide a NAT64 solution to the clients; there is no requirement for providing a DNS64 solution.\u003c/li\u003e\n\u003cli\u003eThe network\u0026rsquo;s DHCPv4 server(s) must include DHCP option 108 in responses to clients, indicating to hosts that support IPv6 only that the network also supports IPv6 only. Option 108 essentially lets a device skip getting an IPv4 address.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"my-target\"\u003eMy target\u003c/h3\u003e\n\u003cp\u003eMy target for now is IPv6 Mostly, and here\u0026rsquo;s why:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI own devices that don\u0026rsquo;t support IPv6 or don\u0026rsquo;t support IPv6 only operations.\u003c/li\u003e\n\u003cli\u003eThis is the most common deployment method.\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t limit me from running some devices as IPv6 only for testing purposes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI have chosen IPv6 mostly because it provides a good balance between being forward-thinking and still supporting backwards compatibility with IPv4 networks. While IPv6 only might be the ultimate goal, IPv6 mostly is a more achievable target that can help pave the way for widespread adoption of IPv6 in the future.\u003c/p\u003e\n\u003ch2 id=\"so-how-do-i-access-ipv4-only-sites\"\u003eSo how do i access ipv4 only sites?\u003c/h2\u003e\n\u003cp\u003eThe short answer is NAT64 + either DNS64 or CLAT. I will dedicate a blog post in the future to NAT64, but here\u0026rsquo;s the short version of what it does. Due to IPv6 having more bits than IPv4, we can cram an ipv4 address into an ipv6 address. We traditionally use 64:ff9b::/96 for this, but there are other options. So let\u0026rsquo;s say you wanted to access 1.1.1.1 via NAT64, instead of sending your packet to 1.1.1.1, you would send it to 64:ff9b::101:101 given that is what the address would be if you took the first 96 bits from 64:ff9b:: and added the 32 bits of 1.1.1.1.\u003c/p\u003e\n\u003cp\u003eBut we are (mostly) not accessing services directly by ipv4 address, so we need to map DNS to this mess, somehow. There are two ways this is done\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDNS64 - This is essentially the DNS server lying to the client, by creating a fake AAAA record though the NAT64 device if no AAAAs exist for that domain. But given the DNS server is lying to the client, DNSSEC doesn\u0026rsquo;t like DNS64. The advantage is that it works on any device that supports IPv6. But it only works for DNS, so any IPv4 literals won\u0026rsquo;t be saved by this. Another indirect consequence of this approach is that sites with AAAA records, but broken ipv6 doesn\u0026rsquo;t have any way to fall back to the ipv4 connectivity.\u003c/li\u003e\n\u003cli\u003eCLAT aka 464XLAT - This works by having code on the device doing the translation, it\u0026rsquo;s typically implemented as a new ip on an existing interface, or new interface entirely. This is very common in mobile devices, and it is (very slowly) getting implemented on desktop devices. The advantage is that this works for both DNS and IPv4 literals, and it doesn\u0026rsquo;t involve changing DNS responses.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"a-short-introduction-to-my-home-network-and-what-i-want-to-do\"\u003eA short introduction to my home network, and what i want to do.\u003c/h2\u003e\n\u003cp\u003eTo say that my home network is unusual would be an understatement. Like a lot of people working in IT, I have a sizable homelab, but unlike most others, I have decided to somewhat separate my lab from the rest of the network. Oh and then there is the small detail that I am running my own publicly routed ASN (AS201911), and though that has a /44 IPv6 allocation.\u003c/p\u003e\n\u003cp\u003eThe following is a diagram from earlier this year, of how I wanted the network to look logically. Some of this isn\u0026rsquo;t implemented, but it gives a picture of the direction I have been going\n\u003cimg src=\"/images/content/ipv6-series/logical-network-diagram-2025.svg\" alt=\"Network diagram\"\u003e\u003c/p\u003e\n\u003cp\u003eI will fully acknowledge that best practice is an unknown concept in this rat\u0026rsquo;s nest of a network. But my goals have never been to create something that made sense; it has been to create something that gave me the flexibility I wanted to do whatever I want with limited impact on other parts of the network. Besides that, I just like BGP, and wanted more BGP in my home network.\u003c/p\u003e\n\u003cp\u003eI don\u0026rsquo;t have a public IPv4 address for my home network, so everything I expose is exposed through IPv6 only, mostly with Cloudflare proxy in front of the service, both to protect the service, and to enable dual-stack access through Cloudflare\u0026rsquo;s proxy service.\u003c/p\u003e\n\u003cp\u003eAll routers you see in the diagram are either OpnSense firewalls or VYOS routers.\u003c/p\u003e\n\u003cp\u003eSo what do I want to do with the network?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a centralized NAT64 service. Right now, the DKNIM-LFW cluster, and DKNIM-HFW clusters are both running NAT64; I would like to centralize this.\u003c/li\u003e\n\u003cli\u003eEnable option 108 on all networks with DHCP. A lot should already have it, but it\u0026rsquo;s not enabled everywhere.\u003c/li\u003e\n\u003cli\u003eExplore running CLAT on Linux servers.\u003c/li\u003e\n\u003cli\u003eExplore options for a permanent IPv6 only or dual-stacked container platform.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"expected-challenges\"\u003eExpected challenges\u003c/h2\u003e\n\u003cp\u003eIf you are starting an IPv6 mostly journey, here are some things to be aware of.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirstly, there are a few popular services using ipv4 literals, most notably Discord. So if you enable option 108 on a device without CLAT, don\u0026rsquo;t be surprised when parts of Discord stops working.\u003c/li\u003e\n\u003cli\u003eYou might also find that your ISP doesn\u0026rsquo;t support ipv6, you can of course solve this in the crazy person way and start your own ISP like network, or you could be more sensible, and use something like HE tunnels.\u003c/li\u003e\n\u003cli\u003eIOT devices generally don\u0026rsquo;t have great ipv6 support.\u003c/li\u003e\n\u003cli\u003eIf you are used to doing music streaming from your phone to maybe a Sonos speaker, that might break with option 108, given that Sonos doesn\u0026rsquo;t support ipv6, and your phone most likely won\u0026rsquo;t have an ipv4 address.\u003c/li\u003e\n\u003cli\u003eContainers and ipv6 - Generally not a good time, although it can be in some cases.\u003c/li\u003e\n\u003cli\u003eSome applications you host might listen to 0.0.0.0 instead of [::] (this supports both v4 and v6), if it\u0026rsquo;s an open source project, and you have the ability, please fix it in the project, and try to get it merged.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"what-is-next\"\u003eWhat is next?\u003c/h2\u003e\n\u003cp\u003eMy plan is to start looking into diffrent NAT64 options given i have been out of that game for a bit. So look forward to a post comparing different options, and detailing what i will end up doing.\u003c/p\u003e\n","description":"The start of a series of posts related to building an ipv6 mostly home network and lab","image":"/images/content/intro-homelab-v6-hero.png","permalink":"http://localhost:1313/posts/ipv6-mostly-home-intro/","title":"A Glimpse into the Future: An introduction to IPv6 in your homelab"}]